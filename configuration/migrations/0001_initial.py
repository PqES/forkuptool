# Generated by Django 3.0.8 on 2020-07-03 13:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Arquivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=150, verbose_name='Nome do arquivo')),
                ('caminho_completo', models.CharField(max_length=250, verbose_name='Caminho completo do arquivo')),
            ],
        ),
        migrations.CreateModel(
            name='Commit',
            fields=[
                ('string_hash', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True, verbose_name='String SHA do commit')),
            ],
        ),
        migrations.CreateModel(
            name='Comparacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datahorario_execucao', models.DateTimeField(auto_now=True, verbose_name='Data/Horário de execução')),
                ('descricao_vendor', models.CharField(default='', max_length=150, verbose_name='Obs. repositório fornecedor')),
                ('descricao_client', models.CharField(default='', max_length=150, verbose_name='Obs. repositório cliente')),
                ('path_repositorio_vendor', models.CharField(max_length=150, verbose_name='Repositório fornecedor')),
                ('path_repositorio_client', models.CharField(max_length=150, verbose_name='Repositório cliente')),
                ('numero_arquivos_ignorados', models.IntegerField(default=0, verbose_name='Nº de arquivos ignorados por regra de negócio')),
            ],
            options={
                'verbose_name': 'Comparação entre repositórios',
                'verbose_name_plural': 'Comparações entre repositórios',
            },
        ),
        migrations.CreateModel(
            name='ConfiguracaoFerramenta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=150, unique=True, verbose_name='Descrição geral da configuração')),
                ('alias_project', models.CharField(default='', max_length=150, verbose_name='Alias do projeto de software a ser customizado')),
                ('alias_vendor', models.CharField(default='', max_length=150, verbose_name='Alias do projeto original')),
                ('alias_client', models.CharField(default='', max_length=150, verbose_name='Alias do projeto customizado')),
                ('branch_vendor', models.CharField(default='', max_length=150, verbose_name='Branch do projeto original')),
                ('branch_auxilary_files', models.CharField(default='', max_length=150, verbose_name='Branch dos arquivos auxiliares')),
                ('path_vendor', models.CharField(max_length=150, verbose_name='Caminho completo do projeto original')),
                ('path_auxiliary_files', models.CharField(max_length=150, verbose_name='Caminho completo dos arquivos auxiliares')),
                ('path_patch_files', models.CharField(max_length=150, verbose_name='Caminho completo dos arquivos de patch')),
            ],
            options={
                'verbose_name': 'Configuração de execução da ferramenta',
                'verbose_name_plural': 'Configurações de execução da ferramenta',
            },
        ),
        migrations.CreateModel(
            name='ConfiguracaoGeral',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=150, unique=True, verbose_name='Descrição')),
                ('descricao_vendor', models.CharField(default='', max_length=150, verbose_name='Descrição do repositório fornecedor')),
                ('descricao_client', models.CharField(default='', max_length=150, verbose_name='Descrição do repositório cliente')),
                ('path_repositorio_vendor', models.CharField(max_length=150, verbose_name='Caminho completo do repositório fornecedor')),
                ('path_repositorio_client', models.CharField(max_length=150, verbose_name='Caminho completo do repositório cliente')),
            ],
            options={
                'verbose_name': 'Configuração geral do projeto',
                'verbose_name_plural': 'Configurações gerais do projeto',
            },
        ),
        migrations.CreateModel(
            name='ThreadTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.CharField(blank=True, max_length=30, null=True)),
                ('is_done', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ArquivoClient',
            fields=[
                ('arquivo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='configuration.Arquivo')),
                ('tem_no_vendor', models.BooleanField(default=True, verbose_name='Tem correspondente no vendor?')),
                ('igual_ao_vendor', models.BooleanField(default=True, verbose_name='É igual ao correspondente no vendor?')),
                ('commits', models.ManyToManyField(to='configuration.Commit', verbose_name='Commits que afetaram o arquivo')),
            ],
            bases=('configuration.arquivo',),
        ),
        migrations.CreateModel(
            name='ArquivoVendor',
            fields=[
                ('arquivo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='configuration.Arquivo')),
                ('tem_no_client', models.BooleanField(default=True, verbose_name='Tem correspondente no client?')),
                ('igual_ao_client', models.BooleanField(default=True, verbose_name='É igual ao correspondente no client?')),
                ('commits', models.ManyToManyField(to='configuration.Commit', verbose_name='Commits que afetaram o arquivo')),
            ],
            bases=('configuration.arquivo',),
        ),
        migrations.CreateModel(
            name='ArquivosComparados',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_linhas_inseridas', models.IntegerField(default=0, verbose_name='Nº linhas inseridas')),
                ('numero_linhas_excluidas', models.IntegerField(default=0, verbose_name='Nº linhas excluídas')),
                ('analise_diff_realizada', models.BooleanField(default=False, verbose_name='Foi realizada análise de diff entre os arquivos?')),
                ('analise_diff', models.TextField(default='', verbose_name='Análise de diff entre os arquivos')),
                ('comparacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configuration.Comparacao', verbose_name='Execução de comparação entre repositórios')),
                ('arquivo_client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='configuration.ArquivoClient', verbose_name='Arquivo client')),
                ('arquivo_vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='configuration.ArquivoVendor', verbose_name='Arquivo vendor')),
            ],
            options={
                'verbose_name': 'Arquivos comparados',
                'verbose_name_plural': 'Arquivos comparados',
            },
        ),
    ]
